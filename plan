# Final goal -
Able to accept an image, and replace it with an array of smaller images, that give a similar overall picture.

Resize the image e.g. to 600px x 400px.
Split into small blocks (e.g. 30px x 20px).
For each block, determine the average colour.
For each block, determine which image from a preexisting bank of images has the perceptually closest average colour.
Return an array of filenames, to place images.

https://github.com/oliver-moran/jimp#low-level-manipulation
Check whether bitwise operators would be useful.


Next step, 
 enable any file to be source - via upload or otherwise. Simple express server with file upload, and receive organised array of image thumbnails when it's processed (resized and analysed).
    Make function for file resize which returns a promise, so we can chain next events (getFilenames) to when it completes 



 Step One - Generate thumbnails - Manual
 Step Two - Analyse thumbnails - Manual

 Step Three - Split image into blocks and get matching filenames, display result - Make automatic.
    For now - put source images in 'input' folder. Run resizeImages. Change desired filename in index. Run node index. Run getFilenames.